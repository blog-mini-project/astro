---
import Base from '../layouts/base.astro'
import { lucia } from "../lib/auth"
import { getPosts } from '../lib/posts'

const cookiename = lucia.sessionCookieName

let posts = await getPosts()
console.log(posts)
---
<Base title="Read Posts" classes="min-h-screen flex flex-col items-center justify-center bg-gray-100 p-4">
    <div class='text-4xl font-bold mb-6'>Posts</div>
    <div id="posts-container" class='w-full max-w-3xl flex flex-col gap-4'>
        {posts.length > 0 ? (
            posts.map(post => (
                <div class='border rounded-lg p-4 bg-white text-black shadow-md cursor-pointer' key={post.id} data-post-id={post.id} onclick={`window.location.href='/post/${post.id}'`}>
                    <h2 class='text-2xl font-semibold mb-2'>{post.title}</h2>
                    <p class='text-gray-700 mb-2'>{post.content.substring(0, 100)}...</p>
                    <div class='text-sm text-gray-500 mb-2'>
                        <p>Author: {post.user}</p>
                        <p>Published: {new Date(post.published).toLocaleString()}</p>
                        <p>Upvotes: {post.upvotes}</p>
                        <p>Downvotes: {post.downvotes}</p>
                        <p>Tags: {post.tags.join(', ')}</p>
                    </div>
                    <div class='author-details text-sm text-gray-500 mt-2'>
                        Loading author details...
                    </div>
                </div>
            ))
        ) : (
            <div class='text-center text-gray-500'>No posts available</div>
        )}
    </div>
    <script define:vars={{ cookiename, posts }}>
        var cookies = document.cookie.split(';').reduce((acc, cookie) => {
            const [name, value] = cookie.split('=').map(c => c.trim())
            acc[name] = value
            return acc
        }, {})

        var checkifloggedin = cookies[cookiename] ?? null
        if (!checkifloggedin) {
            window.location.href = "/login"
        }

        async function fetchAuthorDetails() {
            const postsContainer = document.getElementById('posts-container')
            const postElements = postsContainer.querySelectorAll('[data-post-id]')

            for (let postElement of postElements) {
                const postId = postElement.getAttribute('data-post-id')
                const post = posts.find(p => p.id == postId)
                const response = await fetch(`/api/user/${post.user}`)
                const authorDetailsElement = postElement.querySelector('.author-details')

                if (response.ok) {
                    const authorDetails = await response.json()
                    authorDetailsElement.innerHTML = `
                    <div class='flex items-center gap-2'>
                    <img src='${authorDetails.profilepic}' alt='${authorDetails.displayname}' class='w-12 h-12 rounded-full'>
                    <p class="font-semibold text-gray-700 text-lg">
                        ${authorDetails.displayname}
                    </p>
                    </div>

                    `
                } else {
                    authorDetailsElement.innerHTML = `
                        <p class='text-red-500'>Failed to fetch author details</p>
                    `
                }
            }
        }

        fetchAuthorDetails()
    </script>
</Base>