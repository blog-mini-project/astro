---
const { title } = Astro.props
const { classes } = Astro.props
import Nav from "../ui/nav.astro"
---
<html lang="en">
  <head>
	<title>{title}</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<script src="/tailwind.css" is:inline></script>
	<link rel="shortcut icon" href="/pen.png" type="image/x-icon">
	<link rel="stylesheet" href="./css/button.css">
  </head>
  <body class={classes} style="background-color: black;">
		<Nav />
		
		<slot />

		<script>
		
	        var original = localStorage.getItem('theme') ?? 'dark'

			document.body.style.transition = "background-color 0.3s, color 0.3s"
			document.querySelectorAll('button').forEach(button => {
				button.style.transition = "background-color 0.3s, color 0.3s"
			})
			
			document.body.style.backgroundColor = ""

			function checkLocalStorage() {
				var bgcolors = ["[#363636]", "[#CFCBCA]"]
				var textcolors = ["white", "black"]
				var buttoncolors = ["[#CFCBCA]", "[#363636]"]
				var buttontextcolors = ["black", "white"]
				const isDarkMode = localStorage.getItem("theme") === "dark"
				var bgColorClass = isDarkMode ? `bg-${bgcolors[0]}` : `bg-${bgcolors[1]}`
				var textColorClass = isDarkMode ? `text-${textcolors[0]}` : `text-${textcolors[1]}`
				document.body.classList.remove(`bg-${bgcolors[0]}`, `bg-${bgcolors[1]}`)
				document.body.classList.remove(`text-${textcolors[0]}`, `text-${textcolors[1]}`)
				document.body.classList.add(bgColorClass)
				document.body.classList.add(textColorClass)
				var buttonBgColorClass = isDarkMode ? `bg-${buttoncolors[0]}` : `bg-${buttoncolors[1]}`
				var buttonbghoverColorClass = isDarkMode ? `hover:bg-${buttoncolors[0]}` : `hover:bg-${buttoncolors[1]}`
				var buttonTextColorClass = isDarkMode ? `text-${buttontextcolors[0]}` : `text-${buttontextcolors[1]}`
				var buttons = document.querySelectorAll('button')
				buttons.forEach(button => {
					button.classList.remove(`bg-${buttoncolors[0]}`, `bg-${buttoncolors[1]}`)
					button.classList.remove(`hover:bg-${buttoncolors[0]}`, `hover:bg-${buttoncolors[1]}`)
					button.classList.remove(`text-${buttontextcolors[0]}`, `text-${buttontextcolors[1]}`)
					button.classList.add(buttonBgColorClass)
					button.classList.add(buttonbghoverColorClass)
					button.classList.add(buttonTextColorClass)
				})
			}

			setInterval(checkLocalStorage, 10)
			
			setTimeout(() => {
				localStorage.setItem('theme', original)
			}, 50)
		</script>

  </body>
</html>